
  Usage: webpagetest [options] [command]

  Commands:

    status [options] <id>  check test status
    results [options] <id> get test results
    locations [options]    list locations and the number of pending tests
    testers [options]      list testers status and details
    test [options] <url_or_script> run test
    cancel <id>            cancel running/pending test
    har <id>               get the HTTPS Archive (HAR) from test
    pagespeed [options] <id> get the Google Page Speed results (if available) from test
    utilization [options] <id> get the CPU, bandwidth and memory utilization data from test
    request [options] <id> get the request data from test
    timeline [options] <id> get the Chrome Developer Tools Timeline data (if available) from test
    netlog [options] <id>  get the Chrome Developer Tools Net log data (if available) from test
    console [options] <id> get the browser console log data (if available) from test
    testinfo <id>          get test request info/details
    waterfall [options] <id> get the waterfall PNG image
    screenshot [options] <id> get the fully loaded page screenshot in JPG format (PNG if in full resolution)
    listen [hostname:port] start webpagetest-api server on <hostname>:<port> [hostname:7791]
    batch <file>           run commands in batch, i.e. one command per line from <file> in parallel

  Options:

    -h, --help             output usage information
    -V, --version          output the version number
    -s, --server <server>  the WPT server URL [http://www.webpagetest.org]
    -d, --dryrun           just return the RESTful API URL
    -o, --out <file>       place the output into <file>. Defaults to stdout

